!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).interval=e()}(this,function(){"use strict";var t={start:function(){!function(){if(!window.Alpine)throw new Error("[Magic Helpers] Alpine is required for the magic helpers to function correctly.")}(),Alpine.addMagicProperty("interval",function(){return function(){for(var t=this,e=arguments.length,o=new Array(e),n=0;n<e;n++)o[n]=arguments[n];if("function"!=typeof o[0])return o[0];var r=o[1],a=0,i=!1;"object"==typeof o[1]&&(o[1].hasOwnProperty("timer")&&(r=o[1].timer),o[1].hasOwnProperty("delay")&&(a=o[1].delay),o[1].hasOwnProperty("forceInterval")&&(i=o[1].forceInterval));var u=function(){var e=!t.hasOwnProperty("autoIntervalTest")||t.autoIntervalTest;setTimeout(function(){t.autoIntervalLoop&&(e&&o[0].call(t),i?t.autoIntervalLoop():requestAnimationFrame(t.autoIntervalLoop))},r)};this.autoIntervalLoop=u,setTimeout(function(){t.autoIntervalLoop&&(i?t.autoIntervalLoop():requestAnimationFrame(t.autoIntervalLoop))},a),this.$watch("autoIntervalTest",function(e){e?(t.autoIntervalLoop=u,i?t.autoIntervalLoop():requestAnimationFrame(t.autoIntervalLoop)):(clearTimeout(t.autoIntervalLoop),t.autoIntervalLoop=null)})}})}},e=window.deferLoadingAlpine||function(t){return t()};return window.deferLoadingAlpine=function(o){t.start(),e(o)},t});
//# sourceMappingURL=interval.js.map
